git init: 在当前目录初始化一个新的 Git 仓库。

用法：git init

git clone: 从远程 Git 仓库克隆代码到本地。

用法：git clone <remote repository URL>

git add: 将工作区的改动添加到暂存区。

用法：git add <file name> 或 git add .（添加所有文件）

git commit: 将暂存区的改动提交到本地仓库。

用法：git commit -m "<commit message>"

git push: 将本地仓库的改动推送到远程 Git 仓库。

用法：git push <remote> <branch>

git pull: 从远程 Git 仓库拉取最新代码到本地。

用法：git pull <remote> <branch>

git branch: 查看当前仓库所有分支。

用法：git branch 或 git branch -a（查看所有分支，包括远程分支）

git checkout: 切换分支或恢复文件到某个版本。

用法：git checkout <branch name> 或 git checkout <commit hash> -- <file name>

git merge: 将一个分支的代码合并到当前分支。

用法：git merge <branch name>

git status: 查看当前工作区状态。

用法：git status

git log: 查看仓库提交记录。

用法：git log 或 git log --oneline（以单行显示）

git diff: 查看工作区与本地仓库或暂存区的差异。

用法：git diff 或 git diff <file name>

git reset: 撤销提交或重置仓库到某个版本。

用法：git reset <commit hash> 或 git reset HEAD <file name>

git stash: 将当前工作区的改动暂存起来。

用法：git stash 或 git stash save "<stash message>"

git remote: 查看或操作远程 Git 仓库。

用法：git remote -v（查看远程仓库详细信息）或 git remote add <remote name> <remote repository URL>（添加远程仓库）

git fetch: 从远程 Git 仓库拉取最新代码到本地，但不合并到当前分支。

用法：git fetch <remote> <branch>

git rebase: 将当前分支的改动合并到目标分支，以线性的方式展现提交记录。

用法：git rebase <target branch>

git cherry-pick: 将一个或多个提交应用到当前分支。

用法：`git cherry-pick <commit